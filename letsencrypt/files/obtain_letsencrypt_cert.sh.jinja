#!/bin/bash
{% from "letsencrypt/map.jinja" import letsencrypt with context %}

{%- if letsencrypt.use_package %}
  {% set letsencrypt_command = "certbot" %}
{% else %}
  {% set letsencrypt_command = letsencrypt.cli_install_dir + "/letsencrypt-auto" %}
{%- endif %}

PARAMETERS=''
{%- if letsencrypt.post_hook.cmds %}
#PARAMETERS="$PARAMETERS --post-hook \"{{ letsencrypt.post_hook.cmds|join(' && ') }}\""
{%- endif %}
{%- if letsencrypt.pre_hook.cmds %}
#PARAMETERS="$PARAMETERS --pre-hook \"{{ letsencrypt.pre_hook.cmds|join(' && ') }}\""
{%- endif %}
{% if letsencrypt.webroot != False -%}
PARAMETERS="$PARAMETERS --webroot --webroot-path {{ letsencrypt.webroot.path }}"
{% elif letsencrypt.dns == True -%}
PARAMETERS="$PARAMETERS --manual --preferred-challenges dns"
{% elif letsencrypt.get('dns-route53') == True -%}
PARAMETERS="$PARAMETERS --dns-route53"
{% elif letsencrypt.standalone == True -%}
PARAMETERS="$PARAMETERS --standalone --preferred-challenges tls-sni"
{% endif -%}
LOG_FILE='/var/log/letsencrypt/letsencrypt.log'

{% if 'route53' in letsencrypt %}
{% if 'user' in letsencrypt.route53 %}
export AWS_ACCESS_KEY_ID="{{ letsencrypt.route53.user.key }}"
export AWS_SECRET_ACCESS_KEY="{{ letsencrypt.route53.user.secret }}"
{% elif 'configfile' in letsencrypt.route53 %}
export AWS_CONFIG_FILE="{{ letsencrypt.route53.configfile }}"
{% endif -%}
{% endif -%}

[ ! -d '/var/log/letsencrypt/' ] && mkdir '/var/log/letsencrypt'

for DOMAIN in "$@"
do
    PARAMETERS="$PARAMETERS -d $DOMAIN"
done

{{ letsencrypt_command }} certonly --quiet $PARAMETERS --non-interactive --expand >> "$LOG_FILE" 2>&1

if [ $? != 0 ]; then
    echo Failed to obtain cert, see "$LOG_FILE"
    exit 1
fi
